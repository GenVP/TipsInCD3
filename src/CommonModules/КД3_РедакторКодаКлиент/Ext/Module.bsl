
Процедура ИзвлечьИсходники() Экспорт
	
	КаталогИсходников = КД3_НастройкиКлиент.ЗначениеИзКэша("КаталогИсходников");
	Если КаталогИсходников = Неопределено Тогда
		
		ПодкаталогИсходников = КД3_НастройкиКлиент.ЗначениеИзКэша("ПодкаталогИсходников");
		Если ПодкаталогИсходников = Неопределено Тогда
			ПодкаталогИсходников = КД3_Настройки.ПодкаталогИсходников();
			КД3_НастройкиКлиент.ЗначениеВКэш("ПодкаталогИсходников", ПодкаталогИсходников);
		Конецесли;
		
		КаталогВременныхФайлов = КаталогВременныхФайлов();
		КаталогИсходников = КаталогВременныхФайлов + ПодкаталогИсходников + ПолучитьРазделительПутиКлиента();
		
		// Удаление каталогов старых версий
		СтарыеВерсии = НайтиФайлы(КаталогВременныхФайлов, "bsl_console*_*");
		Для Каждого Файл Из СтарыеВерсии Цикл
			УдалитьФайлы(Файл.ПолноеИмя);
		КонецЦикла;
		СоздатьКаталог(КаталогИсходников);
		
		// Получение файла макета общего для всех конфигураций
		КаталогОбработчика = КаталогИсходников + "CommonEvent" + ПолучитьРазделительПутиКлиента();
		ТестФайл = Новый Файл(КаталогОбработчика);
		Если НЕ ТестФайл.Существует() Тогда
			ДанныеМакета = ПолучитьИзВременногоХранилища(КД3_Настройки.ПолучитьФайлМакетаИсходников());
			КД3_НастройкиКлиент.ЗначениеВКэш("КонсольКодаИнформация", ДанныеМакета.Информация);
			ПотокДляЧтения = ДанныеМакета.ДвоичныеДанные.ОткрытьПотокДляЧтения();
			ZipФайл = Новый ЧтениеZipФайла(ПотокДляЧтения);
			Если НЕ ТестФайл.Существует() Тогда
				ZipФайл.ИзвлечьВсе(КаталогОбработчика);
			КонецЕсли;
		КонецЕсли;
		
		КД3_НастройкиКлиент.ЗначениеВКэш("КаталогИсходников", КаталогИсходников);
	КонецЕсли;
	
КонецПроцедуры

Функция ПутьРедактораКода() Экспорт
	
	Возврат КД3_НастройкиКлиент.ЗначениеИзКэша("КаталогИсходников")
		+ "CommonEvent" + ПолучитьРазделительПутиКлиента() + "index.html";
	
КонецФункции

Процедура УдалитьИсходники() Экспорт
	
	КаталогИсходников = КД3_НастройкиКлиент.ЗначениеИзКэша("КаталогИсходников");
	Если КаталогИсходников = Неопределено Тогда
		Возврат;
	КонецЕсли;
	УдалитьФайлы(КаталогИсходников);
	КД3_НастройкиКлиент.ЗначениеВКэш("КаталогИсходников", Неопределено);
	
КонецПроцедуры

Процедура ИнициализацияРедактора(Форма, ИмяРеквизита, ТекстОбработчика, ТолькоПросмотр) Экспорт
	
	ДокView = View(Форма, ИмяРеквизита);
	Если ДокView = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		Инфо = Новый СистемнаяИнформация;
		ДокView.init(Инфо.ВерсияПриложения);
		ДокView.setOption("autoResizeEditorLayout", Истина);
		ДокView.setOption("renderQueryDelimiters", Истина);
		ДокView.hideScrollX();
		ДокView.hideScrollY();
		
		Если НЕ КД3_НастройкиКлиент.ЗначениеИзКэша("ОтображатьНомераСтрок") Тогда
			ДокView.hideLineNumbers();
		КонецЕсли;
		
		Тема = КД3_НастройкиКлиент.ЗначениеИзКэша("Тема");
		Если КД3_НастройкиКлиент.ЗначениеИзКэша("ПодсветкаЯзыкаЗапросов") Тогда
			Тема = Тема + "-query";
		КонецЕсли;
		Форма.Элементы[ИмяРеквизита].Документ.monaco.editor.setTheme(Тема);
		
		ДокView.disableContextMenu();
		ДокView.minimap(КД3_НастройкиКлиент.ЗначениеИзКэша("ОтображатьКартуКода"));
		
		ДокView.setText(ТекстОбработчика);
		
		Если ТолькоПросмотр Тогда
			ДокView.setReadOnly(Истина);
		Иначе
			ДокView.enableModificationEvent(Истина);
		КонецЕсли;
		
		Форма.ПодключитьОбработчикОжидания("КД3_Подключаемый_ИнициализацияМетаданных", 0.5, Истина);
	Исключение
		ТекстСообщения = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ОбщегоНазначенияКЛиент.СообщитьПользователю(ТекстСообщения);
	КонецПопытки;
	
КонецПроцедуры

Процедура ИнициализацияМетаданных(Форма, ДляКорреспондента) Экспорт
	
	Если ДляКорреспондента Тогда
		Конфигурация = Форма.КД3_КонфигурацияКорреспондент;
	Иначе
		Конфигурация = Форма.КД3_Конфигурация;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Конфигурация) Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеКонтекста = КД3_МетаданныеКлиент.ОписаниеМетаданных(Конфигурация, "globalcontext");
	
	Для Каждого ЭлементСписка Из Форма.КД3_Обработчики Цикл
		Если ЭлементСписка.Пометка = ДляКорреспондента Тогда
			ДокView = View(Форма, "КД3_" + ЭлементСписка.Значение);
			Если ДокView = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			ДокView.clearMetadata();
			// Загрузка списка всех общих модулей (без методов)
			Если ОписаниеКонтекста.ОбщиеМодули <> Неопределено Тогда
				Результат = ДокView.updateMetadataObj(ОписаниеКонтекста.ОбщиеМодули);
				Если НЕ ПустаяСтрока(Результат) Тогда
					ОбщегоНазначенияКлиент.СообщитьПользователю("Ошибка загрузки общих модулей: " + Результат);
				КонецЕсли;
			КонецЕсли;
			// Загрузка методов глобальных общих модулей
			Если ОписаниеКонтекста.ГлобальныеМодули <> Неопределено Тогда
				ТекстОшибки = ДокView.updateMetadataModule(ОписаниеКонтекста.ГлобальныеМодули);
				Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
					ОбщегоНазначенияКлиент.СообщитьПользователю("Ошибка загрузки методов глобальных модулей: " + ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьТекстПриТолькоПросмотр(Форма, ИмяОбработчика) Экспорт
	View(Форма, "КД3_" + ИмяОбработчика).updateText(Форма[ИмяОбработчика]);
КонецПроцедуры

Процедура УстановитьТекст(Форма, ИмяРеквизита, Текст, Позиция = Неопределено, УчитыватьОтступПервойСтроки = Ложь) Экспорт
	View(Форма, ИмяРеквизита).setText(Текст, Позиция);
КонецПроцедуры

Функция ПолучитьТекст(Форма, ИмяРеквизита) Экспорт
	Возврат View(Форма, ИмяРеквизита).getText();
КонецФункции

Процедура ОчиститьМетаданные(Форма, ИмяРеквизита) Экспорт
	ДокView = View(Форма, ИмяРеквизита);
	Если ДокView <> Неопределено Тогда
		ДокView.clearMetadata();
	КонецЕсли;
КонецПроцедуры

Функция ОбновитьМетаданные(Форма, ИмяРеквизита, ОписаниеМетаданныхJSON, ЭтоМодуль) Экспорт
	
	ДокView = View(Форма, ИмяРеквизита);
	Если ЭтоМодуль Тогда
		РезультатОбновления = ДокView.updateMetadataModule(ОписаниеМетаданныхJSON);
	Иначе
		РезультатОбновления = ДокView.updateMetadataObj(ОписаниеМетаданныхJSON);
	КонецЕсли;
	Если ПустаяСтрока(РезультатОбновления) Тогда
		ДокView.triggerSuggestions();
		ТекстОшибки = "";
	Иначе
		ТекстОшибки = РезультатОбновления;
	КонецЕсли;
	Возврат ТекстОшибки;
	
КонецФункции

Процедура Закомментировать(Форма, ИмяРеквизита) Экспорт
	View(Форма, ИмяРеквизита).addComment();
КонецПроцедуры

Процедура УбратьКомментарии(Форма, ИмяРеквизита) Экспорт
	View(Форма, ИмяРеквизита).removeComment();
КонецПроцедуры

Процедура Форматировать(Форма, ИмяРеквизита) Экспорт
	View(Форма, ИмяРеквизита).editor.trigger("", "editor.action.formatDocument");
КонецПроцедуры

Процедура ДобавитьПереносСтроки(Форма, ИмяРеквизита) Экспорт
	View(Форма, ИмяРеквизита).addWordWrap();
КонецПроцедуры

Процедура УдалитьПереносСтроки(Форма, ИмяРеквизита) Экспорт
	View(Форма, ИмяРеквизита).removeWordWrap();
КонецПроцедуры

Функция ПолучитьФорматнуюСтроку(Форма, ИмяРеквизита) Экспорт
	Возврат View(Форма, ИмяРеквизита).getFormatString();
КонецФункции

Функция View(Форма, ИмяРеквизита)
	
	Если ПустаяСтрока(Форма[ИмяРеквизита]) Тогда
		Возврат Неопределено;
	КонецЕсли;
	ДокHTML = Форма.Элементы[ИмяРеквизита].Документ;
	Если ДокHTML = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	Возврат ДокHTML.defaultView;
	
КонецФункции
