
// Возвращает конфигурации в переданном список конвертаций
//
// Параметры:
//  СписокКонвертаций - СписокЗначений - список конвертаций
//  ЭтоКонвертацияXDTO - Булево - вид конвертации XML/XDTO
//
// Возвращаемое значение:
//  Структура - конфигурации конвертаций
//
Функция ПолучитьКонфигурации(СписокКонвертаций, ЭтоКонвертацияXDTO) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Конвертации.Конфигурация КАК Конфигурация
	|ИЗ
	|	Справочник.Конвертации КАК Конвертации
	|ГДЕ
	|	Конвертации.Ссылка В(&СписокКонвертаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Конвертации.КонфигурацияКорреспондент КАК Конфигурация
	|ИЗ
	|	Справочник.Конвертации КАК Конвертации
	|ГДЕ
	|	НЕ &ЭтоКонвертацияXDTO
	|	И Конвертации.Ссылка В(&СписокКонвертаций)";
	Запрос.УстановитьПараметр("ЭтоКонвертацияXDTO", ЭтоКонвертацияXDTO);
	Запрос.УстановитьПараметр("СписокКонвертаций", СписокКонвертаций);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Конфигурации = Новый Структура;
	
	Конфигурации.Вставить("Конфигурация", РезультатЗапроса[0].Выгрузить().ВыгрузитьКолонку("Конфигурация"));
	Конфигурации.Вставить("КонфигурацияКорреспондент", РезультатЗапроса[1].Выгрузить().ВыгрузитьКолонку("Конфигурация"));
	
	Возврат Конфигурации;
	
КонецФункции

Функция ОписаниеМетаданныхПоЗапросу(Конфигурация, ПолноеИмяМетаданных) Экспорт
	
	ОписаниеМетаданных = Новый Структура;
	
	ЧастиИмени = СтрРазделить(ПолноеИмяМетаданных, ".");
	КорневойТип = НРег(ЧастиИмени[0]);
	
	Если КорневойТип = "commonmodules" Тогда
		// Так как загрузка метаданных из файла как "общиемодули"
		КорневойТип = "общиемодули";
	КонецЕсли;
	
	ПутьМетаданных = КД3_МетаданныеПовтИсп.ИмяКоллекцииПоКорневомуТипу(КорневойТип) + ".items";
	
	Если ЧастиИмени.Количество() = 1 Тогда
		Если КорневойТип = "отчеты" ИЛИ КорневойТип = "обработки" ИЛИ КорневойТип = "общиемодули" Тогда
			// Чтение данных не типовых объектов КД3
			КлючКонфигурация = КД3_Настройки.КлючКэшаНастроек(Конфигурация);
			ОписаниеКоллекции = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(
				КлючКонфигурация, КорневойТип);
			Если ОписаниеКоллекции = Неопределено Тогда
				ОписаниеКоллекции = Новый Структура;
			КонецЕсли;
			Если КорневойТип = "общиемодули" Тогда
				ОписаниеКоллекции = Новый Структура("commonModules", ОписаниеКоллекции);
				ПутьМетаданных = "";
			КонецЕсли;
		Иначе
			ОписаниеКоллекции = ОписатьКоллекциюОбъектовМетаданных(Конфигурация, КорневойТип);
		КонецЕсли;
	Иначе
		ИмяОбъекта = ЧастиИмени[1];
		ОписаниеКоллекции = ОписатьОбъектМетаданых(Конфигурация, КорневойТип, ИмяОбъекта);
		// Обновление реального имени объекта
		ПутьМетаданных = ПутьМетаданных + "." + ИмяОбъекта;
	КонецЕсли;
	
	Попытка
		Файл = Новый ЗаписьJSON();
		Файл.УстановитьСтроку();
		ЗаписатьJSON(Файл, ОписаниеКоллекции);
		МетаданныеJSON = Файл.Закрыть();
	Исключение
		МетаданныеJSON = "";
		ТекстСообщения = "Не удалось получить метаданных конфигурации:" + Символы.ПС +
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецПопытки;
	
	ОписаниеМетаданных.Вставить("МетаданныеJSON", МетаданныеJSON);
	ОписаниеМетаданных.Вставить("ПутьМетаданных", ПутьМетаданных);
	
	Возврат ОписаниеМетаданных;
	
КонецФункции

Функция ОписатьКоллекциюОбъектовМетаданных(Конфигурация, КорневойТип)
	
	ТипОбъекта = КД3_МетаданныеПовтИсп.ТипОбъектаПоКорневомуТипу(КорневойТип);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Объекты.Ссылка КАК Ссылка,
	|	Объекты.Имя КАК Имя
	|ИЗ
	|	Справочник.Объекты КАК Объекты
	|ГДЕ
	|	Объекты.Владелец = &Конфигурация
	|	И Объекты.Тип = &ТипОбъекта
	|	И НЕ Объекты.ПометкаУдаления";
	Запрос.УстановитьПараметр("Конфигурация", Конфигурация);
	Запрос.УстановитьПараметр("ТипОбъекта", ТипОбъекта);
	
	ОписаниеКоллекции = Новый Структура;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ОписаниеКоллекции.Вставить(Выборка.Имя, Новый Структура);
	КонецЦикла;
	
	Возврат ОписаниеКоллекции;
	
КонецФункции

Функция ОписатьОбъектМетаданых(Конфигурация, КорневойТип, ИмяОбъекта)
	
	ТипОбъекта = КД3_МетаданныеПовтИсп.ТипОбъектаПоКорневомуТипу(КорневойТип);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Объекты.Ссылка КАК Ссылка,
	|	Объекты.Имя КАК Имя,
	|	Объекты.Периодичность КАК Периодичность
	|ИЗ
	|	Справочник.Объекты КАК Объекты
	|ГДЕ
	|	Объекты.Владелец = &Конфигурация
	|	И Объекты.Тип = &ТипОбъекта
	|	И Объекты.Имя = &ИмяОбъекта
	|	И НЕ ПометкаУдаления";
	Запрос.УстановитьПараметр("Конфигурация", Конфигурация);
	Запрос.УстановитьПараметр("ТипОбъекта", ТипОбъекта);
	Запрос.УстановитьПараметр("ИмяОбъекта", ИмяОбъекта);
	
	ВыборкаОбъект = Запрос.Выполнить().Выбрать();
	Если НЕ ВыборкаОбъект.Следующий() Тогда
		ТекстСообщения = СтрШаблон(
			"Не найден элемент справочника ""Объекты"" для:
			|	Конфигурация: %1
			|	Тип объекта: %2
			|	Имя объекта: %3",
			Конфигурация, ТипОбъекта, ИмяОбъекта);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	// Возврат реального имени объекта, так как оно было получено в нижнем регистре
	ИмяОбъекта = ВыборкаОбъект.Имя;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Значения.Наименование КАК Наименование,
	|	Значения.Синоним КАК Синоним
	|ИЗ
	|	Справочник.Значения КАК Значения
	|ГДЕ
	|	Значения.Владелец = &Объект
	|	И НЕ Значения.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Свойства.Ссылка КАК Ссылка,
	|	Свойства.Родитель КАК Родитель,
	|	Свойства.Вид КАК Вид,
	|	Свойства.Наименование КАК Наименование,
	|	Свойства.Синоним КАК Синоним
	|ИЗ
	|	Справочник.Свойства КАК Свойства
	|ГДЕ
	|	Свойства.Владелец = &Объект
	|	И Свойства.Вид В(&ВидыСвойств)
	|	И НЕ ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Свойства.ЭтоГруппа УБЫВ";
	
	ВидыСвойств = Новый Массив;
	ВидыСвойств.Добавить(Перечисления.ВидыСвойств.Реквизит);
	Если КД3_МетаданныеПовтИсп.КорневойТипРегистра(КорневойТип) Тогда
		ВидыСвойств.Добавить(Перечисления.ВидыСвойств.Измерение);
		ВидыСвойств.Добавить(Перечисления.ВидыСвойств.Ресурс);
	КонецЕсли;
	Если КД3_МетаданныеПовтИсп.КорневойТипТЧ(КорневойТип) Тогда
		ВидыСвойств.Добавить(Перечисления.ВидыСвойств.ТабличнаяЧасть);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Объект", ВыборкаОбъект.Ссылка);
	Запрос.УстановитьПараметр("ВидыСвойств", ВидыСвойств);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	СтруктураОбъекта = Новый Структура;
	СтруктураОбъекта.Вставить("properties", Новый Структура);
	СтруктураОбъекта.Вставить("predefined", Новый Структура);
	СтруктураОбъекта.Вставить("resources", Новый Структура);
	СтруктураОбъекта.Вставить("tabulars", Новый Структура);
	
	ЗаполнитьОписаниеПредопределенных(РезультатЗапроса, СтруктураОбъекта, КорневойТип);
	ЗаполнитьОписаниеСвойств(РезультатЗапроса, СтруктураОбъекта);
	
	Возврат СтруктураОбъекта;
	
КонецФункции

Процедура ЗаполнитьОписаниеПредопределенных(РезультатЗапроса, СтруктураОбъекта, КорневойТип)
	
	Если КД3_МетаданныеПовтИсп.КорневойТипЗначений(КорневойТип) Тогда
		ВыборкаЗначений = РезультатЗапроса[0].Выбрать();
		Пока ВыборкаЗначений.Следующий() Цикл
			Если НЕ ПустаяСтрока(ВыборкаЗначений.Наименование) Тогда
				СтруктураОбъекта.predefined.Вставить(ВыборкаЗначений.Наименование);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеСвойств(РезультатЗапроса, СтруктураОбъекта)
	
	ВыборкаСвойств = РезультатЗапроса[1].Выбрать();
	
	СоответствиеТабЧастей = Новый Соответствие;
	
	Пока ВыборкаСвойств.Следующий() Цикл
		Если ЗначениеЗаполнено(ВыборкаСвойств.Родитель) Тогда
			КоллекцияДляДобавления = СоответствиеТабЧастей[ВыборкаСвойств.Родитель];
			ОписаниеСвойства = Новый Структура("name", ВыборкаСвойств.Синоним);
		Иначе
			Если ВыборкаСвойств.Вид = Перечисления.ВидыСвойств.Ресурс Тогда
				КоллекцияДляДобавления = СтруктураОбъекта.resources;
			Иначе
				КоллекцияДляДобавления = СтруктураОбъекта.properties;
			КонецЕсли;
			Если ВыборкаСвойств.Вид = Перечисления.ВидыСвойств.ТабличнаяЧасть Тогда
				ОписаниеТабЧасти = Новый Структура;
				СтруктураОбъекта.tabulars.Вставить(ВыборкаСвойств.Наименование, ОписаниеТабЧасти);
				СоответствиеТабЧастей.Вставить(ВыборкаСвойств.Ссылка, ОписаниеТабЧасти);
				
				ОписаниеСвойства = Новый Структура("name", "ТЧ: " + ВыборкаСвойств.Синоним);
			Иначе
				ОписаниеСвойства = Новый Структура("name", ВыборкаСвойств.Синоним);
			КонецЕсли;
		КонецЕсли;
		КоллекцияДляДобавления.Вставить(ВыборкаСвойств.Наименование, ОписаниеСвойства);
	КонецЦикла;
	
КонецПроцедуры

Процедура УдалитьКоллекциюМетаданных(Конфигурация) Экспорт
	
	// Удаление сохраненных настроек метаданных
	
КонецПроцедуры