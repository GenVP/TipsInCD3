
Процедура ПриОткрытии(Форма, Объект) Экспорт
	ИнициализацияОбработчиков(Форма, Объект);
КонецПроцедуры

Процедура ПередЗаписью(Форма, Объект, Отказ) Экспорт
	
	Если Не Отказ Тогда
		Для Каждого ЭлементСписка Из Форма["КД3_Обработчики"] Цикл
			ИмяОбработчика = ЭлементСписка.Значение;
			Если НЕ Форма.Элементы[ИмяОбработчика].ТолькоПросмотр Тогда
				ИмяРеквизита = "КД3_" + ИмяОбработчика;
				Если Форма[ИмяРеквизита] <> "" Тогда
					ДокView = View(Форма, ИмяРеквизита);
					Если ДокView <> Неопределено Тогда
						НовоеЗначение = КД3_МетаданныеКлиент.ПолучитьТекст(Форма, ИмяРеквизита);
						Если НовоеЗначение <> Объект[ИмяОбработчика] Тогда
							Объект[ИмяОбработчика] = НовоеЗначение;
							Форма.Модифицированность = Истина;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриСменеСтраницы(Форма, ИмяОбработчика) Экспорт
	
	// Инициализация загрузки страницы и метаданных обработчика в КД3_ДокументСформирован как только он станет видимым
	ИмяРеквизита = "КД3_" + ИмяОбработчика;
	Если Форма[ИмяРеквизита] = "" Тогда
		Форма[ИмяРеквизита] = КД3_Кэш()["КаталогИсходников"] + ИмяОбработчика + "\" + "index.html";
	КонецЕсли;
	
КонецПроцедуры

Процедура ИзвлечьИсходники() Экспорт
	
	КаталогИсходников = КД3_Кэш()["КаталогИсходников"];
	Если КаталогИсходников = Неопределено Тогда
		КаталогВременныхФайлов = КаталогВременныхФайлов();
		КаталогИсходников = КаталогВременныхФайлов + "bsl_console" + КД3_Метаданные.ВерсияИсходников() + "\";
		ТестФайл = Новый Файл(КаталогИсходников);
		Если НЕ ТестФайл.Существует() Тогда
			// Удаление каталогов старых версий
			СтарыеВерсии = НайтиФайлы(КаталогВременныхФайлов, "bsl_console*_*");
			Для Каждого Файл Из СтарыеВерсии Цикл
				УдалитьФайлы(Файл.ПолноеИмя);
			КонецЦикла;
			СоздатьКаталог(КаталогИсходников);
		КонецЕсли;
		
		// Получение файла макета общего для всех конфигураций
		ФайлМакета = КаталогИсходников + "bsl_console.zip";
		ТестФайл = Новый Файл(ФайлМакета);
		Если НЕ ТестФайл.Существует() Тогда
			ДанныеМакета = ПолучитьИзВременногоХранилища(КД3_Метаданные.ПолучитьФайлМакетаИсходников());
			ДанныеМакета.Записать(ФайлМакета);
		КонецЕсли;
		
		КД3_Кэш()["КаталогИсходников"] = КаталогИсходников;
	КонецЕсли;
	
КонецПроцедуры

Процедура ИнициализацияРедактора(Форма, ИмяРеквизита) Экспорт
	
	ДокView = View(Форма, ИмяРеквизита);
	Если ДокView <> Неопределено Тогда
		Инфо = Новый СистемнаяИнформация;
		ДокView.init(Инфо.ВерсияПриложения);
		
		Тема = КД3_Кэш()["КД3_Настройки_ИмяТемы"];
		Если НЕ ПустаяСтрока(Тема) Тогда
			Форма.Элементы[ИмяРеквизита].Документ.monaco.editor.setTheme(Тема);
		КонецЕсли;
		
		НеОтображатьКартуКода = КД3_Кэш()["КД3_Настройки_НеОтображатьКартуКода"];
		ДокView.minimap(НеОтображатьКартуКода <> Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ИнициализацияОбработчиков(Форма, Объект) Экспорт
	
	КаталогИсходников = КД3_Кэш()["КаталогИсходников"];
	
	// Создание экземпляра для каждого обработчика. Экземпляр каждого обработчика должен
	// быть отдельным, иначе методы экземляра не будут успевать выполняться и будут ошибки.
	ФайлМакета = КаталогИсходников + "bsl_console.zip";
	ZipФайл = Новый ЧтениеZipФайла(ФайлМакета);
	Для Каждого ЭлементСписка Из Форма["КД3_Обработчики"] Цикл
		КаталогОбработчика = КаталогИсходников + ЭлементСписка.Значение + "\";
		ТестФайл = Новый Файл(КаталогОбработчика);
		Если НЕ ТестФайл.Существует() Тогда
			ZipФайл.ИзвлечьВсе(КаталогОбработчика);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьМетаданные(Форма, ИмяИзмененногоОбработчика = Неопределено) Экспорт
	
	НеЗагружатьМетаданные = КД3_Кэш()["КД3_Настройки_НеЗагружатьМетаданные"];
	Если НеЗагружатьМетаданные = Истина Тогда
		Возврат; // Метаданные не загружаются
	КонецЕсли;
	
	Если ИмяИзмененногоОбработчика = Неопределено Тогда
		Обработчики = Форма["КД3_Обработчики"].ВыгрузитьЗначения();
	Иначе
		Обработчики = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ИмяИзмененногоОбработчика);
	КонецЕсли;
	
	Конфигурация = Форма["КД3_Конфигурация"];
	
	МетаданныеJSON = КД3_Кэш()[Конфигурация];
	Если МетаданныеJSON = Неопределено Тогда
		МетаданныеJSON = ПолучитьИзВременногоХранилища(КД3_Метаданные.КоллекцияМетаданных(Конфигурация));
		КД3_Кэш()[Конфигурация] = МетаданныеJSON;
	КонецЕсли;
	
	Для Каждого ИмяОбработчика Из Обработчики Цикл
		ИмяРеквизита = "КД3_" + ИмяОбработчика;
		Если Форма[ИмяРеквизита] <> "" Тогда
			ДокView = View(Форма, ИмяРеквизита);
			Если ДокView <> Неопределено Тогда
				Результат = ДокView.updateMetadata(МетаданныеJSON);
				Если ТипЗнч(Результат) <> Тип("Булево") Тогда
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось обновить метаданные для " + ИмяОбработчика + Символы.ПС + Результат.errorDescription);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ИзменитьТему(Форма, Тема) Экспорт
	
	Обработчики = Форма["КД3_Обработчики"].ВыгрузитьЗначения();
	Для Каждого ИмяОбработчика Из Обработчики Цикл
		ИмяРеквизита = "КД3_" + ИмяОбработчика;
		Если Форма[ИмяРеквизита] <> "" Тогда
			Форма.Элементы[ИмяРеквизита].Документ.monaco.editor.setTheme(Тема);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция View(Форма, ИмяРеквизита)
	ДокHTML = Форма.Элементы[ИмяРеквизита].Документ;
	Если ДокHTML = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	Возврат ДокHTML.defaultView;
КонецФункции

Процедура УстановитьТекстПриТолькоПросмотр(Форма, ИмяРеквизита, Текст) Экспорт
	
	ДокView = View(Форма, ИмяРеквизита);
	Если ДокView <> Неопределено Тогда
		УстановитьТолькоПросмотр(Форма, ИмяРеквизита, Ложь);
		ОчиститьТекст(Форма, ИмяРеквизита);
		Если НЕ ПустаяСтрока(Текст) Тогда
			УстановитьТекст(Форма, ИмяРеквизита, Текст);
		КонецЕсли;
		УстановитьТолькоПросмотр(Форма, ИмяРеквизита, Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьТолькоПросмотр(Форма, ИмяРеквизита, ТолькоПросмотр) Экспорт
	View = View(Форма, ИмяРеквизита);
	Если View <> Неопределено Тогда
		View.setReadOnly(ТолькоПросмотр);
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьТекст(Форма, ИмяРеквизита, Текст, Позиция = Неопределено, УчитыватьОтступПервойСтроки = Ложь) Экспорт
	View(Форма, ИмяРеквизита).setText(Текст, Позиция);
КонецПроцедуры

Функция ПолучитьТекст(Форма, ИмяРеквизита) Экспорт
	Возврат View(Форма, ИмяРеквизита).getText();
КонецФункции

Функция ОчиститьТекст(Форма, ИмяРеквизита) Экспорт
	Возврат View(Форма, ИмяРеквизита).eraseText();
КонецФункции

Процедура ВызватьКонструкторФорматнойСтроки(Форма, Элемент, ДанныеСобытия) Экспорт
	
	Событие = ДанныеСобытия.Event.eventData1C;
	Если Событие = Неопределено ИЛИ Событие.event <> "EVENT_FORMAT_CONSTRUCT" Тогда
		Возврат;
	КонецЕсли;
	ПараметрыСтроки = Событие.params;
	
	ДопПараметры = Новый Структура("Форма,ИмяРеквизита", Форма, Элемент.Имя);
	Если ПараметрыСтроки = Неопределено Тогда
		ДопПараметры.Вставить("ФорматНаяСтрока", "");
		ДопПараметры.Вставить("Позиция", Неопределено);
		
		Оповещение = Новый ОписаниеОповещения ("ОткрытьКонструкторФорматнойСтроки", ОбщегоНазначенияКлиент.ОбщийМодуль("КД3_МетаданныеКлиент"), ДопПараметры);
		ПоказатьВопрос(Оповещение, "Форматная строка не найдена." + Символы.ПС + "Создать новую форматную строку?", РежимДиалогаВопрос.ДаНет);
	Иначе
		ДопПараметры.Вставить("ФорматНаяСтрока", СтрЗаменить(СтрЗаменить(ПараметрыСтроки.text, "|", ""), """", ""));
		ДопПараметры.Вставить("Позиция", ПараметрыСтроки.range);
		
		Оповещение = Новый ОписаниеОповещения ("ОткрытьКонструкторФорматнойСтроки", ОбщегоНазначенияКлиент.ОбщийМодуль("КД3_МетаданныеКлиент"), ДопПараметры);
		ВыполнитьОбработкуОповещения(Оповещение, КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьКонструкторФорматнойСтроки(Ответ, ДопПараметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ПриЗакрытииКонструктораФорматнойСтроки", ОбщегоНазначенияКлиент.ОбщийМодуль("КД3_МетаданныеКлиент"), ДопПараметры);
	Конструктор = Новый КонструкторФорматнойСтроки();
	Попытка
		Конструктор.Текст = ДопПараметры.ФорматнаяСтрока;
		Конструктор.Показать(Оповещение);
	Исключение
		ТекстСообщения = ИнформацияОбОшибке();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецПопытки;
	
КонецПроцедуры

Процедура ПриЗакрытииКонструктораФорматнойСтроки(Текст, ДопПараметры) Экспорт
	
	Если Текст = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Текст = СтрЗаменить(Текст, Символы.ПС, Символы.ПС + "|");
	Текст = СтрЗаменить(Текст, """", """""");
	Текст = """" + Текст + """";
	УстановитьТекст(ДопПараметры.Форма, ДопПараметры.ИмяРеквизита, Текст, ДопПараметры.Позиция);
	
КонецПроцедуры

Процедура СохранитьНастройкиВКэше(Настройки) Экспорт
	
	Кэш = КД3_Кэш();
	Кэш["КД3_Настройки_Тема"] = Настройки.Тема;
	Кэш["КД3_Настройки_ИмяТемы"] = Настройки.ИмяТемы;
	Кэш["КД3_Настройки_НеЗагружатьМетаданные"] = Настройки.НеЗагружатьМетаданные;
	Кэш["КД3_Настройки_НеОтображатьКартуКода"] = Настройки.НеОтображатьКартуКода;
	Кэш["КД3_Настройки_ПодсветкаЯзыкаЗапросов"] = Настройки.ПодсветкаЯзыкаЗапросов;
	
КонецПроцедуры
