
Процедура УстановитьВидимостьКонфигураций(ДоступныеКонфигурации, ЭтоКонвертацияXDTO, Форма) Экспорт
	
	Элемент = Форма.Элементы.КД3_Конфигурация;
	Элемент.СписокВыбора.ЗагрузитьЗначения(ДоступныеКонфигурации.Конфигурация);
	Элемент.ТолькоПросмотр = ДоступныеКонфигурации.Конфигурация.Количество() = 1;
	
	ВидимостьГруппы = НЕ Элемент.ТолькоПросмотр;
	
	Если НЕ ЭтоКонвертацияXDTO Тогда
		ЭлементКорреспондент = Форма.Элементы.КД3_КонфигурацияКорреспондент;
		ЭлементКорреспондент.СписокВыбора.ЗагрузитьЗначения(ДоступныеКонфигурации.КонфигурацияКорреспондент);
		ЭлементКорреспондент.ТолькоПросмотр = ДоступныеКонфигурации.КонфигурацияКорреспондент.Количество() = 1;
		ВидимостьГруппы = ВидимостьГруппы ИЛИ НЕ ЭлементКорреспондент.ТолькоПросмотр;
	КонецЕсли;
	
	Форма.Элементы.КД3_ГруппаКонфигурация.Видимость = ВидимостьГруппы;
	
КонецПроцедуры

Функция ДоступныеКонфигурации(Форма, ЭтоКонвертацияXDTO) Экспорт
	
	ИмяКонтекста = Форма.КД3_ИмяКонтекста;
	
	ПроверкаФормы = Новый Структура("СписокКонвертаций,Конфигурация,СписокКонфигураций,СписокКонфигурацийКорреспондент,ОбъектКонфигурации,ОбъектКонфигурацииКорреспондент");
	ПроверкаОбъекта = Новый Структура("Конфигурация,ОбъектКонфигурации,ОбъектКонфигурацииКорреспондент,ОбъектВыборки");
	ЗаполнитьЗначенияСвойств(ПроверкаФормы, Форма);
	ЗаполнитьЗначенияСвойств(ПроверкаОбъекта, Форма.Объект);
	
	ДоступныеКонфигурации = Новый Структура("Конфигурация,КонфигурацияКорреспондент,Конвертации");
	Если НЕ ЭтоКонвертацияXDTO Тогда
		ДоступныеКонфигурации.Вставить("КонфигурацияКорреспондент");
	КонецЕсли;
	
	Если ИмяКонтекста = "ПРО" Тогда
		// Это открытие формы справочника "ПравилаРегистрацииОбъектов"
		ДоступныеКонфигурации.Конфигурация = Новый Массив;
		ДоступныеКонфигурации.Конфигурация.Добавить(Форма.Конфигурация);
		
	ИначеЕсли ИмяКонтекста = "Конвертация" Тогда
		// Это открытие формы справочника "Конвертации"
		ДоступныеКонфигурации.Конфигурация = ПроверкаОбъекта.Конфигурация;
		Если НЕ ЭтоКонвертацияXDTO Тогда
			ДоступныеКонфигурации.КонфигурацияКорреспондент = Форма.Объект.КонфигурацияКорреспондент;
		КонецЕсли;
		ДоступныеКонфигурации.Конвертации = Форма.Объект.Ссылка;
		
	Иначе
		Если ИмяКонтекста = "ПКС" ИЛИ ИмяКонтекста = "ПКГС" Тогда
			// Это открытие формы элемента или группы ПравилаКонвертацииСвойств
			ПроверкаФормы.СписокКонвертаций = Новый СписокЗначений;
			КД3_УправлениеФормойВызовСервера.ПолучитьВхожденияВКонвертацииДляЭлементаКонвертации(Форма.Объект.Владелец, ПроверкаФормы.СписокКонвертаций);
			ЗаполнитьЗначенияСвойств(ПроверкаОбъекта, ПроверкаФормы, "ОбъектКонфигурации,ОбъектКонфигурацииКорреспондент");
			ДоступныеКонфигурации.Конвертации = ПроверкаФормы.СписокКонвертаций;
		Иначе
			// На форме справочника ПравилаКонвертацииОбъектов и ПравилаКонвертацииПредопределенныхДанных уже есть список конфигураций
			Если ИмяКонтекста = "ПКО" ИЛИ ИмяКонтекста = "ПКПД" Тогда
				ДоступныеКонфигурации.Конфигурация = ПроверкаФормы.СписокКонфигураций.ВыгрузитьЗначения();
				Если НЕ ЭтоКонвертацияXDTO Тогда
					ДоступныеКонфигурации.КонфигурацияКорреспондент = ПроверкаФормы.СписокКонфигурацийКорреспондент.ВыгрузитьЗначения();
				КонецЕсли;
			ИначеЕсли ИмяКонтекста = "ПОД" Тогда
				// Это открытие формы ПравилаОбработкиДанных
				ПроверкаОбъекта.ОбъектКонфигурации = ПроверкаОбъекта.ОбъектВыборки;
			КонецЕсли;
		КонецЕсли;
		
		КД3_УправлениеФормойВызовСервера.ЗаполнитьКонфигурации(ДоступныеКонфигурации, ПроверкаФормы.СписокКонвертаций, ЭтоКонвертацияXDTO,
			ПроверкаОбъекта.ОбъектКонфигурации, ПроверкаОбъекта.ОбъектКонфигурацииКорреспондент);
	КонецЕсли;
	
	Возврат ДоступныеКонфигурации;
	
КонецФункции
