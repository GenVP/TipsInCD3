
Функция ИспользоватьРедакторКода() Экспорт
	Настройки = НастройкиПоУмолчанию();
	СохраненноеЗначение = ХранилищеОбщихНастроек.Загрузить("КД3_Настройки", "ИспользоватьРедакторКода");
	Возврат ?(СохраненноеЗначение = Неопределено, Настройки.ИспользоватьРедакторКода, СохраненноеЗначение);
КонецФункции

Функция ИспользоватьКонтекстнуюПодсказку() Экспорт
	Настройки = НастройкиПоУмолчанию();
	СохраненноеЗначение = ХранилищеОбщихНастроек.Загрузить("КД3_Настройки", "ИспользоватьКонтекстнуюПодсказку");
	Возврат ?(СохраненноеЗначение = Неопределено, Настройки.ИспользоватьРедакторКода, СохраненноеЗначение);
КонецФункции

Функция ЗагрузитьНастройки() Экспорт
	Настройки = НастройкиПоУмолчанию();
	Для Каждого КлючИЗначение Из Настройки Цикл
		НовоеЗначение = ХранилищеОбщихНастроек.Загрузить("КД3_Настройки", КлючИЗначение.Ключ);
		Если НовоеЗначение <> Неопределено Тогда
			Настройки.Вставить(КлючИЗначение.Ключ, НовоеЗначение);
		КонецЕсли;
	КонецЦикла;
	Возврат Настройки;
КонецФункции

Процедура СохранитьНастройки(ТекущиеНастройки) Экспорт
	Настройки = НастройкиПоУмолчанию();
	ЗаполнитьЗначенияСвойств(Настройки, ТекущиеНастройки);
	Для Каждого КлючИЗначение Из Настройки Цикл
		ХранилищеОбщихНастроек.Сохранить("КД3_Настройки", КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
КонецПроцедуры

Функция НастройкиПоУмолчанию() Экспорт
	Настройки = Новый Структура;
	Настройки.Вставить("Тема", "bsl-white");
	Настройки.Вставить("ИспользоватьРедакторКода", Истина);
	Настройки.Вставить("ИспользоватьКонтекстнуюПодсказку", Истина);
	Настройки.Вставить("ОтображатьКартуКода", Ложь);
	Настройки.Вставить("ПодсветкаЯзыкаЗапросов", Ложь);
	Настройки.Вставить("УдалятьВременныеФайлыПриЗакрытии", Истина);
	Настройки.Вставить("ОтображатьНомераСтрок", Истина);
	Возврат Настройки;
КонецФункции

Функция ПолучитьФайлМакетаИсходников() Экспорт
	ДанныеМакета = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища("КД3_bsl_console");
	Если ДанныеМакета = Неопределено Тогда
		ДанныеМакета = Новый Структура;
		ДанныеМакета.Вставить("ДвоичныеДанные", ПолучитьОбщийМакет("КД3_src"));
		ДанныеМакета.Вставить("Информация",
			"Загружена из макета ""КД3_src""
			|Версия " + Метаданные.ОбщиеМакеты.КД3_src.Комментарий);
	КонецЕсли;
	Возврат ПоместитьВоВременноеХранилище(ДанныеМакета);
КонецФункции

Функция УстановитьФайлМакетаИсходников(АдресМакета) Экспорт
	Если АдресМакета = Неопределено Тогда
		ОбщегоНазначения.УдалитьДанныеИзБезопасногоХранилища("КД3_bsl_console");
	Иначе
		ДанныеМакета = Новый Структура;
		ДанныеМакета.Вставить("ДвоичныеДанные", ПолучитьИзВременногоХранилища(АдресМакета));
		ДанныеМакета.Вставить("Информация",
			"Загружена из файла
			|Дата " + ТекущаяДатаСеанса() + "
			|Пользователь " + Пользователи.ТекущийПользователь());
		ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище("КД3_bsl_console", ДанныеМакета);
	КонецЕсли;
КонецФункции

Функция ПодкаталогИсходников() Экспорт
	// Получение уникального идентификатора текущей ИБ
	УИД_ИБ = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища("КД3", "УИД_ИБ");
	Если УИД_ИБ = Неопределено Тогда
		УИД_ИБ = СтрЗаменить(Новый УникальныйИдентификатор, "-", "");
		ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище("КД3", УИД_ИБ, "УИД_ИБ");
	КонецЕсли;
	КаталогИсходников = "bsl_console" + СтрЗаменить(Метаданные.ОбщиеМакеты.КД3_src.Комментарий, ".", "") + "_" + УИД_ИБ;
	Возврат КаталогИсходников;
КонецФункции
