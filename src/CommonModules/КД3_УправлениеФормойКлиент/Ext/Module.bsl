
Процедура ИнициализацияРедактора(Форма, ИмяРеквизита, Объект, ТолькоПросмотр = Ложь) Экспорт
	ИмяОбработчика = Сред(ИмяРеквизита, 5);
	ТекстОбработчика = ?(ТолькоПросмотр, Форма[ИмяОбработчика], Объект[ИмяОбработчика]);
	КД3_РедакторКодаКлиент.ИнициализацияРедактора(Форма, ИмяРеквизита, ТекстОбработчика, ТолькоПросмотр);
КонецПроцедуры

Процедура ПередЗаписью(Форма, Отказ) Экспорт
	СохранитьИзмененныйОбработчик(Форма);
КонецПроцедуры

Процедура ПриСменеСтраницы(Форма, СтраницаИлиОбработчик) Экспорт
	
	СохранитьИзмененныйОбработчик(Форма);
	
	Если ТипЗнч(СтраницаИлиОбработчик) = Тип("Строка") Тогда
		ИмяОбработчика = СтраницаИлиОбработчик;
	Иначе
		ЭлементСписка = Форма.КД3_СтраницыОбработчиков.НайтиПоЗначению(СтраницаИлиОбработчик.Имя);
		Если ЭлементСписка = Неопределено Тогда
			Возврат; // Это алгоритм или запрос
		КонецЕсли;
		ИмяОбработчика = ЭлементСписка.Представление;
	КонецЕсли;
	
	КД3_РедакторКодаКлиент.ИзвлечьИсходники();
	
	// Инициализация загрузки обработчика будет выполнена в процедуре формы
	// КД3_Подключаемый_ДокументСформирован после того, как он станет видимым
	ИмяРеквизита = "КД3_" + ИмяОбработчика;
	Если Форма[ИмяРеквизита] = "" Тогда
		Форма[ИмяРеквизита] = КД3_РедакторКодаКлиент.ПутьРедактораКода();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОчиститьМетаданныеКонфигурации(Форма, ДляКорреспондента) Экспорт
	Для Каждого ЭлементСписка Из Форма.КД3_Обработчики Цикл
		Если ЭлементСписка.Пометка = ДляКорреспондента Тогда
			КД3_РедакторКодаКлиент.ОчиститьМетаданные(Форма, "КД3_" + ЭлементСписка.Значение);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ОбработатьСобытиеHTML(Форма, Элемент, ДанныеСобытия) Экспорт
	Событие = ДанныеСобытия.Event.eventData1C;
	Если Событие = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если Событие.event = "EVENT_GET_METADATA" Тогда
		Если КД3_НастройкиКлиент.ИспользоватьКонтекстнуюПодсказку() Тогда
			ВызватьОбновлениеМетаданных(Форма, Элемент.Имя, Событие.params)
		КонецЕсли;
	ИначеЕсли Событие.event = "EVENT_CONTENT_CHANGED" Тогда
		Форма.Модифицированность = Истина;
		Если Форма.КД3_ИзмененныйРеквизит <> Элемент.Имя Тогда
			СохранитьИзмененныйОбработчик(Форма);
			Форма.КД3_ИзмененныйРеквизит = Элемент.Имя;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура КомандаРедактора(ЭтотОбъект, Команда) Экспорт
	ПозРазделителя = СтрНайти(Команда.Имя, "_", НаправлениеПоиска.СКонца);
	ИмяРеквизита = Лев(Команда.Имя, ПозРазделителя -1);
	ИмяКоманды = Сред(Команда.Имя, ПозРазделителя + 1);
	Если ИмяКоманды = "Закомментировать" Тогда
		КД3_РедакторКодаКлиент.Закомментировать(ЭтотОбъект, ИмяРеквизита);
	ИначеЕсли ИмяКоманды = "УбратьКомментарии" Тогда
		КД3_РедакторКодаКлиент.УбратьКомментарии(ЭтотОбъект, ИмяРеквизита);
	ИначеЕсли ИмяКоманды = "КонструкторФорматнойСтроки" Тогда
		ВызватьКонструкторФорматнойСтроки(ЭтотОбъект, ИмяРеквизита);
	ИначеЕсли ИмяКоманды = "Форматировать" Тогда
		КД3_РедакторКодаКлиент.Форматировать(ЭтотОбъект, ИмяРеквизита);
	ИначеЕсли ИмяКоманды = "ДобавитьПереносСтроки" Тогда
		КД3_РедакторКодаКлиент.ДобавитьПереносСтроки(ЭтотОбъект, ИмяРеквизита);
	ИначеЕсли ИмяКоманды = "УдалитьПереносСтроки" Тогда
		КД3_РедакторКодаКлиент.УдалитьПереносСтроки(ЭтотОбъект, ИмяРеквизита);
	КонецЕсли;
КонецПроцедуры

Процедура СохранитьИзмененныйОбработчик(Форма)
	
	Если ПустаяСтрока(Форма.КД3_ИзмененныйРеквизит) Тогда
		Возврат;
	КонецЕсли;
	
	ИмяОбработчика = Сред(Форма.КД3_ИзмененныйРеквизит, 5);
	НовоеЗначение = КД3_РедакторКодаКлиент.ПолучитьТекст(Форма, Форма.КД3_ИзмененныйРеквизит);
	НовоеЗначение = СтрЗаменить(НовоеЗначение, Символ(13) + Символ(10), Символ(10));
	
	Форма.КД3_ИзмененныйРеквизит = "";
	
	Если НовоеЗначение = Форма.Объект[ИмяОбработчика] Тогда
		Возврат; // Произошла только замена LF на CR+LF
	КонецЕсли;
	Форма.Объект[ИмяОбработчика] = НовоеЗначение;
	
	СтраницаОбработчика = Форма.Элементы[ИмяОбработчика].Родитель;
	Если ТипЗнч(СтраницаОбработчика) = Тип("ФормаКлиентскогоПриложения") Тогда
		Возврат; // Обработчик алгоритма или запроса
	КонецЕсли;
	СтраницаОбработчика.Картинка = ?(ПустаяСтрока(НовоеЗначение), Новый Картинка, БиблиотекаКартинок.Успешно);
	
КонецПроцедуры

Процедура ВызватьКонструкторФорматнойСтроки(Форма, ИмяРеквизита)
	
	ПараметрыСтроки = КД3_РедакторКодаКлиент.ПолучитьФорматнуюСтроку(Форма, ИмяРеквизита);
	
	ДопПараметры = Новый Структура("Форма,ИмяРеквизита", Форма, ИмяРеквизита);
	Если ПараметрыСтроки = Неопределено Тогда
		ДопПараметры.Вставить("ФорматНаяСтрока", "");
		ДопПараметры.Вставить("Позиция", Неопределено);
		
		Оповещение = Новый ОписаниеОповещения ("ОткрытьКонструкторФорматнойСтроки",
			ОбщегоНазначенияКлиент.ОбщийМодуль("КД3_УправлениеФормойКлиент"), ДопПараметры);
		ТекстВопроса =
			"Форматная строка не найдена.
			|Создать новую форматную строку?";
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ФорматнаяСтрока = СтрЗаменить(СтрЗаменить(ПараметрыСтроки.text, "|", ""), """", "");
		ДопПараметры.Вставить("ФорматНаяСтрока", ФорматнаяСтрока);
		ДопПараметры.Вставить("Позиция", ПараметрыСтроки.range);
		
		Оповещение = Новый ОписаниеОповещения ("ОткрытьКонструкторФорматнойСтроки",
			ОбщегоНазначенияКлиент.ОбщийМодуль("КД3_УправлениеФормойКлиент"), ДопПараметры);
		ВыполнитьОбработкуОповещения(Оповещение, КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьКонструкторФорматнойСтроки(Ответ, ДопПараметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ПриЗакрытииКонструктораФорматнойСтроки",
		ОбщегоНазначенияКлиент.ОбщийМодуль("КД3_УправлениеФормойКлиент"), ДопПараметры);
	Конструктор = Новый КонструкторФорматнойСтроки();
	Попытка
		Конструктор.Текст = ДопПараметры.ФорматнаяСтрока;
		Конструктор.Показать(Оповещение);
	Исключение
		ТекстСообщения = ИнформацияОбОшибке();
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецПопытки;
	
КонецПроцедуры

Процедура ПриЗакрытииКонструктораФорматнойСтроки(Текст, ДопПараметры) Экспорт
	
	Если Текст = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Текст = СтрЗаменить(Текст, Символы.ПС, Символы.ПС + "|");
	Текст = СтрЗаменить(Текст, """", """""");
	Текст = """" + Текст + """";
	КД3_РедакторКодаКлиент.УстановитьТекст(ДопПараметры.Форма, ДопПараметры.ИмяРеквизита, Текст, ДопПараметры.Позиция);
	
КонецПроцедуры

Процедура ПриЗагрузкеМетаданныхКонфигурации(Конфигурация) Экспорт
	КД3_МетаданныеКлиент.МетаданныеВКэш(Конфигурация, Неопределено);
	Оповестить("КД3_ОбновитьМетаданные", Конфигурация);
КонецПроцедуры

Процедура ОбработкаОповещения(Форма, ИмяСобытия, Параметр) Экспорт
	Если ИмяСобытия = "КД3_ОбновитьМетаданные" Тогда
		КонфигурацииНаФорме = Новый Структура("КД3_Конфигурация,КД3_КонфигурацияКорреспондент");
		ЗаполнитьЗначенияСвойств(КонфигурацииНаФорме, Форма);
		Если Параметр = КонфигурацииНаФорме.КД3_Конфигурация Тогда
			ОчиститьМетаданныеКонфигурации(Форма, Ложь);
		КонецЕсли;
		Если Параметр = КонфигурацииНаФорме.КД3_КонфигурацияКорреспондент Тогда
			ОчиститьМетаданныеКонфигурации(Форма, Истина);
		КонецЕсли;
	Конецесли;
КонецПроцедуры

Процедура ВызватьОбновлениеМетаданных(Форма, ИмяРеквизита, ПолноеИмяМетаданных)
	
	ИмяОбработчика = Сред(ИмяРеквизита, 5);
	ЭлементСписка = Форма.КД3_Обработчики.НайтиПоЗначению(ИмяОбработчика);
	Конфигурация = ?(ЭлементСписка.Пометка, Форма.КД3_КонфигурацияКорреспондент, Форма.КД3_Конфигурация);
	
	МетаданныеКонфигурации = КД3_МетаданныеКлиент.МетаданныеИзКэша(Конфигурация);
	Если МетаданныеКонфигурации = Неопределено Тогда
		МетаданныеКонфигурации = Новый Соответствие;
		КД3_МетаданныеКлиент.МетаданныеВКэш(Конфигурация, МетаданныеКонфигурации);
	КонецЕсли;
	
	ОписаниеМетаданных = КД3_МетаданныеКлиент.МетаданныеИзКэша(ПолноеИмяМетаданных);
	Если ОписаниеМетаданных = Неопределено Тогда
		ОписаниеМетаданных = КД3_Метаданные.ОписаниеМетаданныхПоЗапросу(Конфигурация, ПолноеИмяМетаданных);
		КД3_МетаданныеКлиент.МетаданныеВКэш(ПолноеИмяМетаданных, ОписаниеМетаданных);
	КонецЕсли;
	
	ТекстОшибки = КД3_РедакторКодаКлиент.ОбновитьМетаданные(Форма, ИмяРеквизита, ОписаниеМетаданных);
	Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
		ТекстСообщения = СтрШаблон("Ошибка обновления метаданных %1: %2", ПолноеИмяМетаданных, ТекстОшибки);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьТекстПриТолькоПросмотр(Форма, ИмяОбработчика) Экспорт
	КД3_РедакторКодаКлиент.УстановитьТекстПриТолькоПросмотр(Форма, ИмяОбработчика);
КонецПроцедуры